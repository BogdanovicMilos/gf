###########
# WEBPACK #
###########

# build the webpack static
FROM node:16-alpine as webpack
COPY ./webpack/package.json /tmp/
COPY ./webpack/package-lock.json /tmp/
WORKDIR /tmp
RUN npm install --no-optional && mkdir -p /usr/src/webpack && mv /tmp/node_modules /usr/src/webpack/

COPY ./webpack /usr/src/webpack
WORKDIR /usr/src/webpack
RUN npm run ci:cd:build


#########
# FINAL #
#########

# pull official base image
FROM python:3.9.6-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
COPY poetry.lock /tmp/
COPY pyproject.toml /tmp/
RUN apk --update add build-base postgresql-dev libffi-dev openssl-dev python3-dev cargo && \
    cd /tmp/ && \
    pip install --upgrade pip && \
    pip install poetry && \
    poetry config virtualenvs.create false && \
    poetry install --no-ansi --no-interaction --no-dev -vvv > /dev/null && \
    apk del build-base libffi-dev python3-dev cargo && \
    rm -rf /var/cache/apk/*

# copy entrypoint.prod.sh
COPY ./app/entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY ./app $APP_HOME
COPY --from=webpack /usr/src/webpack/dist $APP_HOME/static/dist

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
